{"version":3,"sources":["images/Tomato.png","images/AnimeCropped.png","components/Circle.js","components/Welcome.js","components/Configuration.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Circle","className","height","width","cx","cy","r","fill","stroke","strokeWidth","xlinkHref","AnimeCropped","x","y","this","props","timerMinute","timerSecond","Component","Welcome","src","Tomato","alt","Configuration","sendData","parentCallback","state","isSession","intervalId","decreaseCounter","bind","increaseCounter","decreaseSession","increaseSession","playTimer","decreaseTimer","stopTimer","resetTimer","breakInterval","decreaseBreak","increaseBreak","sessionLength","setInterval","onPlayStopTimer","setState","toggleInterval","updateTimerMinute","prevState","clearInterval","style","fontWeight","onClick","icon","faChevronUp","faPlay","faPause","faPowerOff","React","App","callbackFunction","childData","breakLength","isPlay","onIncreaseBreakLength","onDecreaseBreakLength","onIncreaseSessionLength","onDecreaseSessionLength","onToggleInterval","onUpdateTimerMinute","onResetTimer","updateTimerSecond","onUpdateTimerSecond","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a10ce2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Tomato.c98859b0.png\";","module.exports = __webpack_public_path__ + \"static/media/AnimeCropped.e7706f73.png\";","import React, {Component} from 'react';\nimport AnimeCropped from '../images/AnimeCropped.png';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faPlay } from '@fortawesome/free-solid-svg-icons';\n// import { faPause } from '@fortawesome/free-solid-svg-icons';\n// import { faPowerOff } from '@fortawesome/free-solid-svg-icons';\n\nclass Circle extends Component {\n\n    render() {\n        return (\n            <div className='circle'>\n\n                <svg className='circle__svg1' height=\"670\" width=\"670\" >\n                    <circle cx=\"350\" cy=\"350\" r=\"300\" fill='none' stroke='white' strokeWidth='40' />\n                    <circle className='circle__circle1' cx='350' cy='350' r='300' fill='none' stroke='black' strokeWidth='40' />\n                    <svg className='circle__svg2' height='670' width='670' >\n                        <image className='circle__image' xlinkHref={AnimeCropped} x='70' y=\"15\" height=\"670\" width=\"670\" />                        \n                        <circle className='circle__circle2' cx='350' cy='350' r='282' fill='none' />\n                    </svg>\n                </svg>\n\n                <h1 className='circle__time'>\n                    <span>{this.props.timerMinute}</span>\n                    <span>:</span>\n                    <span>\n                        {this.props.timerSecond === 0\n                            ? \"00\"\n                            : this.props.timerSecond < 10\n                            ? \"0\" + this.props.timerSecond\n                            : this.props.timerSecond\n                        }\n                    </span>\n                </h1>\n\n            </div>\n        );\n    }\n}\n\nexport default Circle;","import React, {Component} from 'react';\nimport Tomato from '../images/Tomato.png';\n\nclass Welcome extends Component {\n    render() {\n        return (\n            <div>\n                <h1>Welcome to <img className='welcome__tomato' src={Tomato} alt={Tomato}></img> tomodoro</h1>\n                <p className='welcome__p'>To get started, configure your timer here.</p>\n            </div>\n        );\n    }\n}\n\nexport default Welcome;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronUp } from '@fortawesome/free-solid-svg-icons';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\n\n// class Configuration extends Component {\n\n//     state = {\n//         pacmanRotation: 0\n//     }\n\n//     handlePacmanRotation = (event) => {\n//         this.setState({\n//             pacmanRotation: event.target.value\n//         })\n//     }\n\n//     onSubmit = (event) => {\n//         document.documentElement.style.setProperty(\n//             '--pacman-rotation', \n//             this.state.pacmanRotation\n//         );\n//         event.preventDefault();\n//     }\n\n//     render() {\n//         return (\n//             <div className='configuration'>\n                \n//                 <h5 style={{fontWeight: 'bold'}}>configuration</h5>\n\n//                 <div className='configure'>\n//                     <span className='configure-left'>session length</span>\n//                     <span className='configure-right'>\n//                         <form onSubmit={this.onSubmit}>\n//                             <input \n//                                 className='input__number'\n//                                 type=\"number\" \n//                                 value={this.state.pacmanRotation} \n//                                 onChange={this.handlePacmanRotation}\n//                             />\n//                             <input\n//                                 className='input__submit'\n//                                 type='submit'\n//                                 value='Submit'\n//                             />\n\n//                         </form>\n//                     </span>                \n//                 </div>\n\n//                 <div className='configure'>\n//                     <span className='configure-left'>break length</span>\n//                     <span className='configure-right'><input type='number' className='input__number'></input></span>\n//                 </div>\n\n//             </div>\n//         );\n//     }\n// }\n\nclass Configuration extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSession: true,\n            timerSecond: this.props.timerSecond,\n            intervalId: 0\n        };\n\n        this.decreaseCounter = this.decreaseCounter.bind(this);\n        this.increaseCounter = this.increaseCounter.bind(this);\n        this.decreaseSession = this.decreaseSession.bind(this);\n        this.increaseSession = this.increaseSession.bind(this);\n\n        this.playTimer = this.playTimer.bind(this);\n        this.decreaseTimer = this.decreaseTimer.bind(this);\n        this.stopTimer = this.stopTimer.bind(this);\n        this.resetTimer = this.resetTimer.bind(this);\n    }\n\n    // Decrease Break\n    decreaseCounter() {\n        if(this.props.breakInterval === 1) {\n            return;\n        }\n        this.props.decreaseBreak();\n    }\n\n    // Increase Break\n    increaseCounter() {\n        if(this.props.breakInterval === 60) {\n            return;\n        }\n        this.props.increaseBreak();\n    }\n\n    // Decrease Session\n    decreaseSession() {\n        if(this.props.sessionLength === 60) {\n            return;\n        }\n        this.props.decreaseSession();\n    }\n\n    // Increase Session\n    increaseSession() {\n        if(this.props.sessionLength === 1) {\n            return;\n        }\n        this.props.increaseSession();\n    }\n\n    // PLAY\n    playTimer() {\n        let intervalId = setInterval(this.decreaseTimer, 1000);\n        this.props.onPlayStopTimer(true);\n        this.setState({\n            intervalId: intervalId\n        })\n    }\n\n    // Decrease seconds\n    decreaseTimer() {\n        switch(this.state.timerSecond) {\n            case 0:\n                if(this.props.timerMinute === 0) {\n                    if(this.state.isSession) {\n                        this.setState({\n                            isSession: false\n                        });\n                        this.props.toggleInterval(this.state.isSession);\n                    } else {\n                        this.setState({\n                            isSession: true\n                        });\n                        this.props.toggleInterval(this.state.isSession);\n                    }\n                } else {\n                    this.props.updateTimerMinute()\n                    this.setState({\n                        timerSecond: 59\n                    })\n                    this.sendData();\n                }\n                break;\n            default:\n                this.setState((prevState) => {\n                    return {\n                        timerSecond: prevState.timerSecond - 1,\n                    }\n                })\n                this.sendData();\n                break;\n        }\n    }\n\n    sendData = () => {\n        this.props.parentCallback(this.state.timerSecond);\n    }\n\n    // PAUSE \n    stopTimer() {\n        clearInterval(this.state.intervalId);\n        this.props.onPlayStopTimer(false);\n    }\n\n    // RESET\n    resetTimer() {\n        this.stopTimer();\n        this.props.resetTimer();\n        this.props.onPlayStopTimer(false);\n        this.setState({\n            timerSecond: 0,\n            isSession: true\n        });\n    }\n\n    render() {\n        return(\n            <div className='configuration'>\n\n                <div className='configuration__horizontals'>\n                    <h5 style={{fontWeight: 'bold'}}>configuration</h5>\n                    <div className='horizontal'>\n                        <p className='configure__type'>Session Length</p>\n                        <button className='configure__remote' onClick={this.decreaseSession}>\n                            <FontAwesomeIcon className='configure__remote__down' icon={faChevronUp} />\n                        </button>\n                        <p>{this.props.sessionLength} min</p>\n                        <button className='configure__remote' onClick={this.increaseSession}>\n                            <FontAwesomeIcon className='configure__remote__up'  icon={faChevronUp} />\n                        </button>\n                    </div>\n                    <div className='horizontal'>\n                        <p className='configure__type'>Break Length</p>\n                        <button className='configure__remote' onClick={this.decreaseCounter}>\n                            <FontAwesomeIcon className='configure__remote__down' icon={faChevronUp} />\n                        </button>\n                        <p>{this.props.breakInterval} min</p>\n                        <button className='configure__remote' onClick={this.increaseCounter}>\n                            <FontAwesomeIcon className='configure__remote__up' icon={faChevronUp} />\n                        </button>\n                    </div>\n                    {/* <div className='configure'>\n                        <p className='configure__type'>Session Length</p>\n                        <button className='configure__remote' onClick={this.decreaseSession}>\n                            <FontAwesomeIcon className='configure__remote__down' icon={faChevronUp} />\n                        </button>\n                        <p>{this.props.sessionLength} min</p>\n                        <button className='configure__remote' onClick={this.increaseSession}>\n                            <FontAwesomeIcon className='configure__remote__up'  icon={faChevronUp} />\n                        </button>\n                    </div>\n                    <div className='configure'>\n                        <p className='configure__type'>Break Length</p>\n                        <button className='configure__remote' onClick={this.decreaseCounter}>\n                            <FontAwesomeIcon className='configure__remote__down' icon={faChevronUp} />\n                        </button>\n                        <p>{this.props.breakInterval} min</p>\n                        <button className='configure__remote' onClick={this.increaseCounter}>\n                            <FontAwesomeIcon className='configure__remote__up' icon={faChevronUp} />\n                        </button>\n                    </div> */}\n                </div>\n\n                <div className='container configuration__verticals'>\n                    <div className='row'>\n                        <div className='col-4'>\n                            <button className='vertical' onClick={this.playTimer}>\n                                <p>Play</p>\n                                <FontAwesomeIcon className='configure__remote' icon={faPlay} />\n                            </button>\n                        </div>\n                        <div className='col-4'>\n                            <button className='vertical' onClick={this.stopTimer}>\n                                <p>Pause</p>\n                                <FontAwesomeIcon className='configure__remote' icon={faPause} />\n                            </button>\n                        </div>\n                        <div className='col-4'>\n                            <button className='vertical' onClick={this.resetTimer}>\n                                <p>Reset</p>\n                                    <FontAwesomeIcon className='configure__remote' icon={faPowerOff} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Configuration;","import React from 'react';\nimport './App.css';\nimport Circle from './components/Circle';\nimport Welcome from './components/Welcome';\nimport Configuration from './components/Configuration';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      breakLength: 5,\n      sessionLength: 25,\n      timerMinute: 25,\n      timerSecond: 0,\n      isPlay: false,\n    }\n\n    this.onIncreaseBreakLength = this.onIncreaseBreakLength.bind(this);\n    this.onDecreaseBreakLength = this.onDecreaseBreakLength.bind(this);\n    this.onIncreaseSessionLength = this.onIncreaseSessionLength.bind(this);\n    this.onDecreaseSessionLength = this.onDecreaseSessionLength.bind(this);\n    this.onToggleInterval = this.onToggleInterval.bind(this);\n    this.onUpdateTimerMinute = this.onUpdateTimerMinute.bind(this);\n    this.onResetTimer = this.onResetTimer.bind(this);\n    this.onPlayStopTimer = this.onPlayStopTimer.bind(this);\n  }\n\n  callbackFunction = (childData) => {\n    this.setState({timerSecond: childData})\n  }\n\n  onIncreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength + 1\n      };\n    })\n  }\n\n  onDecreaseBreakLength() {\n    this.setState((prevState) => {\n      return {\n        breakLength: prevState.breakLength - 1\n      };\n    })\n  }\n\n  onIncreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength + 1,\n        timerMinute: prevState.sessionLength + 1\n      };\n    })\n  }\n\n  onDecreaseSessionLength() {\n    this.setState((prevState) => {\n      return {\n        sessionLength: prevState.sessionLength - 1,\n        timerMinute: prevState.sessionLength - 1\n      };\n    })\n  }\n\n  onUpdateTimerMinute() {\n    this.setState((prevState) => {\n      return {\n        timerMinute: prevState.timerMinute - 1\n      }\n    })\n  }\n\n  onToggleInterval(isSession) {\n    if(isSession) {\n      this.setState({\n        timerMinute: this.state.sessionLength\n      })\n    } else {\n      this.setState({\n        timerMinute: this.state.breakLength\n      })\n    }\n  }\n\n  onResetTimer() {\n    this.setState({\n      timerMinute: this.state.sessionLength,\n      timerSecond: 0\n    })\n  }\n\n  onPlayStopTimer(isPlay) {\n    this.setState({\n      isPlay: isPlay\n    })\n  }\n\n  render() {\n    return (\n      <div className='container-fluid app__container'>\n        <div className='row app__row'>\n          <div className='col-6 app__col'>\n            <Circle \n              timerMinute = {this.state.timerMinute}\n              timerSecond = {this.state.timerSecond}\n            />\n          </div>\n          <div className='col-6 app__col'>\n            <Welcome />\n            <Configuration\n              isPlay={this.state.isPlay}\n              onPlayStopTimer = {this.onPlayStopTimer}\n              resetTimer = {this.onResetTimer}\n              timerMinute = {this.state.timerMinute}\n              timerSecond = {this.state.timerSecond}\n              updateTimerMinute = {this.onUpdateTimerMinute}\n              updateTimerSecond = {this.onUpdateTimerSecond}\n              toggleInterval = {this.onToggleInterval}\n\n              breakInterval = {this.state.breakLength} \n              increaseBreak = {this.onIncreaseBreakLength}\n              decreaseBreak = {this.onDecreaseBreakLength}\n\n              sessionLength = {this.state.sessionLength} \n              increaseSession = {this.onIncreaseSessionLength}\n              decreaseSession = {this.onDecreaseSessionLength}\n\n              parentCallback = {this.callbackFunction}\n            />\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}